/**
 * generated by Xtext 2.9.1
 */
package org.xtuml.bp.xtext.masl.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.xtuml.bp.xtext.masl.Domain;
import org.xtuml.bp.xtext.masl.DomainName;
import org.xtuml.bp.xtext.masl.MaslFactory;
import org.xtuml.bp.xtext.masl.MaslPackage;
import org.xtuml.bp.xtext.masl.NamedType;
import org.xtuml.bp.xtext.masl.ParameterDefinition;
import org.xtuml.bp.xtext.masl.ParameterName;
import org.xtuml.bp.xtext.masl.ParameterType;
import org.xtuml.bp.xtext.masl.Pragma;
import org.xtuml.bp.xtext.masl.PragmaList;
import org.xtuml.bp.xtext.masl.PragmaName;
import org.xtuml.bp.xtext.masl.Project;
import org.xtuml.bp.xtext.masl.ProjectName;
import org.xtuml.bp.xtext.masl.ReturnType;
import org.xtuml.bp.xtext.masl.ServiceName;
import org.xtuml.bp.xtext.masl.TerminatorDefinition;
import org.xtuml.bp.xtext.masl.TerminatorFunctionDeclaration;
import org.xtuml.bp.xtext.masl.TerminatorName;
import org.xtuml.bp.xtext.masl.TerminatorServiceDeclaration;
import org.xtuml.bp.xtext.masl.TypeName;
import org.xtuml.bp.xtext.masl.deprecatedType;
import org.xtuml.bp.xtext.masl.domainPrjItem;
import org.xtuml.bp.xtext.masl.parameterList;
import org.xtuml.bp.xtext.masl.projectItem;
import org.xtuml.bp.xtext.masl.terminatorItem;
import org.xtuml.bp.xtext.masl.typeReference;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class MaslPackageImpl extends EPackageImpl implements MaslPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass projectEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass projectItemEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass domainEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass domainPrjItemEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass projectNameEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass domainNameEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass terminatorNameEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass terminatorDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass terminatorItemEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass terminatorServiceDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass terminatorFunctionDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass parameterListEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass parameterDefinitionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass serviceNameEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass parameterNameEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass parameterTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass returnTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass typeReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass deprecatedTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass namedTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass typeNameEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass pragmaListEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass pragmaEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass pragmaNameEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see org.xtuml.bp.xtext.masl.MaslPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private MaslPackageImpl()
  {
    super(eNS_URI, MaslFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   * 
   * <p>This method is used to initialize {@link MaslPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static MaslPackage init()
  {
    if (isInited) return (MaslPackage)EPackage.Registry.INSTANCE.getEPackage(MaslPackage.eNS_URI);

    // Obtain or create and register package
    MaslPackageImpl theMaslPackage = (MaslPackageImpl)(EPackage.Registry.INSTANCE.get(eNS_URI) instanceof MaslPackageImpl ? EPackage.Registry.INSTANCE.get(eNS_URI) : new MaslPackageImpl());

    isInited = true;

    // Create package meta-data objects
    theMaslPackage.createPackageContents();

    // Initialize created meta-data
    theMaslPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theMaslPackage.freeze();

  
    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(MaslPackage.eNS_URI, theMaslPackage);
    return theMaslPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getProject()
  {
    return projectEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getProject_ProjectName()
  {
    return (EReference)projectEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getProject_ProjectItem()
  {
    return (EReference)projectEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getProject_PragmaList()
  {
    return (EReference)projectEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getprojectItem()
  {
    return projectItemEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDomain()
  {
    return domainEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDomain_DomainName()
  {
    return (EReference)domainEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDomain_DomainPrjItem()
  {
    return (EReference)domainEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getDomain_PragmaList()
  {
    return (EReference)domainEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getdomainPrjItem()
  {
    return domainPrjItemEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getProjectName()
  {
    return projectNameEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getProjectName_Identifier()
  {
    return (EAttribute)projectNameEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getDomainName()
  {
    return domainNameEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getDomainName_Identifier()
  {
    return (EAttribute)domainNameEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTerminatorName()
  {
    return terminatorNameEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTerminatorName_Identifier()
  {
    return (EAttribute)terminatorNameEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTerminatorDefinition()
  {
    return terminatorDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTerminatorDefinition_TerminatorName()
  {
    return (EReference)terminatorDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTerminatorDefinition_TerminatorItem()
  {
    return (EReference)terminatorDefinitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTerminatorDefinition_PragmaList()
  {
    return (EReference)terminatorDefinitionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getterminatorItem()
  {
    return terminatorItemEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getterminatorItem_ServiceVisibility()
  {
    return (EAttribute)terminatorItemEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getterminatorItem_ServiceName()
  {
    return (EReference)terminatorItemEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getterminatorItem_ParameterList()
  {
    return (EReference)terminatorItemEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getterminatorItem_PragmaList()
  {
    return (EReference)terminatorItemEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTerminatorServiceDeclaration()
  {
    return terminatorServiceDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTerminatorFunctionDeclaration()
  {
    return terminatorFunctionDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getTerminatorFunctionDeclaration_ReturnType()
  {
    return (EReference)terminatorFunctionDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getparameterList()
  {
    return parameterListEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getparameterList_ParameterDefinition()
  {
    return (EReference)parameterListEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getParameterDefinition()
  {
    return parameterDefinitionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getParameterDefinition_ParameterName()
  {
    return (EReference)parameterDefinitionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getParameterDefinition_ParameterMode()
  {
    return (EAttribute)parameterDefinitionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getParameterDefinition_ParameterType()
  {
    return (EReference)parameterDefinitionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getServiceName()
  {
    return serviceNameEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getServiceName_Identifier()
  {
    return (EAttribute)serviceNameEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getParameterName()
  {
    return parameterNameEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getParameterName_Identifier()
  {
    return (EAttribute)parameterNameEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getParameterType()
  {
    return parameterTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getParameterType_TypeReference()
  {
    return (EReference)parameterTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getReturnType()
  {
    return returnTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getReturnType_TypeReference()
  {
    return (EReference)returnTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass gettypeReference()
  {
    return typeReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getdeprecatedType()
  {
    return deprecatedTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getdeprecatedType_INSTANCE()
  {
    return (EAttribute)deprecatedTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getdeprecatedType_EVENT()
  {
    return (EAttribute)deprecatedTypeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getdeprecatedType_SERVICE()
  {
    return (EAttribute)deprecatedTypeEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getNamedType()
  {
    return namedTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getNamedType_Anonymous()
  {
    return (EAttribute)namedTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getNamedType_DomainName()
  {
    return (EReference)namedTypeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getNamedType_TypeName()
  {
    return (EReference)namedTypeEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getTypeName()
  {
    return typeNameEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getTypeName_Identifier()
  {
    return (EAttribute)typeNameEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getPragmaList()
  {
    return pragmaListEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getPragmaList_Pragma()
  {
    return (EReference)pragmaListEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getPragma()
  {
    return pragmaEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getPragma_PragmaName()
  {
    return (EReference)pragmaEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getPragma_PragmaValue()
  {
    return (EAttribute)pragmaEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getPragmaName()
  {
    return pragmaNameEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getPragmaName_Identifier()
  {
    return (EAttribute)pragmaNameEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MaslFactory getMaslFactory()
  {
    return (MaslFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    projectEClass = createEClass(PROJECT);
    createEReference(projectEClass, PROJECT__PROJECT_NAME);
    createEReference(projectEClass, PROJECT__PROJECT_ITEM);
    createEReference(projectEClass, PROJECT__PRAGMA_LIST);

    projectItemEClass = createEClass(PROJECT_ITEM);

    domainEClass = createEClass(DOMAIN);
    createEReference(domainEClass, DOMAIN__DOMAIN_NAME);
    createEReference(domainEClass, DOMAIN__DOMAIN_PRJ_ITEM);
    createEReference(domainEClass, DOMAIN__PRAGMA_LIST);

    domainPrjItemEClass = createEClass(DOMAIN_PRJ_ITEM);

    projectNameEClass = createEClass(PROJECT_NAME);
    createEAttribute(projectNameEClass, PROJECT_NAME__IDENTIFIER);

    domainNameEClass = createEClass(DOMAIN_NAME);
    createEAttribute(domainNameEClass, DOMAIN_NAME__IDENTIFIER);

    terminatorNameEClass = createEClass(TERMINATOR_NAME);
    createEAttribute(terminatorNameEClass, TERMINATOR_NAME__IDENTIFIER);

    terminatorDefinitionEClass = createEClass(TERMINATOR_DEFINITION);
    createEReference(terminatorDefinitionEClass, TERMINATOR_DEFINITION__TERMINATOR_NAME);
    createEReference(terminatorDefinitionEClass, TERMINATOR_DEFINITION__TERMINATOR_ITEM);
    createEReference(terminatorDefinitionEClass, TERMINATOR_DEFINITION__PRAGMA_LIST);

    terminatorItemEClass = createEClass(TERMINATOR_ITEM);
    createEAttribute(terminatorItemEClass, TERMINATOR_ITEM__SERVICE_VISIBILITY);
    createEReference(terminatorItemEClass, TERMINATOR_ITEM__SERVICE_NAME);
    createEReference(terminatorItemEClass, TERMINATOR_ITEM__PARAMETER_LIST);
    createEReference(terminatorItemEClass, TERMINATOR_ITEM__PRAGMA_LIST);

    terminatorServiceDeclarationEClass = createEClass(TERMINATOR_SERVICE_DECLARATION);

    terminatorFunctionDeclarationEClass = createEClass(TERMINATOR_FUNCTION_DECLARATION);
    createEReference(terminatorFunctionDeclarationEClass, TERMINATOR_FUNCTION_DECLARATION__RETURN_TYPE);

    parameterListEClass = createEClass(PARAMETER_LIST);
    createEReference(parameterListEClass, PARAMETER_LIST__PARAMETER_DEFINITION);

    parameterDefinitionEClass = createEClass(PARAMETER_DEFINITION);
    createEReference(parameterDefinitionEClass, PARAMETER_DEFINITION__PARAMETER_NAME);
    createEAttribute(parameterDefinitionEClass, PARAMETER_DEFINITION__PARAMETER_MODE);
    createEReference(parameterDefinitionEClass, PARAMETER_DEFINITION__PARAMETER_TYPE);

    serviceNameEClass = createEClass(SERVICE_NAME);
    createEAttribute(serviceNameEClass, SERVICE_NAME__IDENTIFIER);

    parameterNameEClass = createEClass(PARAMETER_NAME);
    createEAttribute(parameterNameEClass, PARAMETER_NAME__IDENTIFIER);

    parameterTypeEClass = createEClass(PARAMETER_TYPE);
    createEReference(parameterTypeEClass, PARAMETER_TYPE__TYPE_REFERENCE);

    returnTypeEClass = createEClass(RETURN_TYPE);
    createEReference(returnTypeEClass, RETURN_TYPE__TYPE_REFERENCE);

    typeReferenceEClass = createEClass(TYPE_REFERENCE);

    deprecatedTypeEClass = createEClass(DEPRECATED_TYPE);
    createEAttribute(deprecatedTypeEClass, DEPRECATED_TYPE__INSTANCE);
    createEAttribute(deprecatedTypeEClass, DEPRECATED_TYPE__EVENT);
    createEAttribute(deprecatedTypeEClass, DEPRECATED_TYPE__SERVICE);

    namedTypeEClass = createEClass(NAMED_TYPE);
    createEAttribute(namedTypeEClass, NAMED_TYPE__ANONYMOUS);
    createEReference(namedTypeEClass, NAMED_TYPE__DOMAIN_NAME);
    createEReference(namedTypeEClass, NAMED_TYPE__TYPE_NAME);

    typeNameEClass = createEClass(TYPE_NAME);
    createEAttribute(typeNameEClass, TYPE_NAME__IDENTIFIER);

    pragmaListEClass = createEClass(PRAGMA_LIST);
    createEReference(pragmaListEClass, PRAGMA_LIST__PRAGMA);

    pragmaEClass = createEClass(PRAGMA);
    createEReference(pragmaEClass, PRAGMA__PRAGMA_NAME);
    createEAttribute(pragmaEClass, PRAGMA__PRAGMA_VALUE);

    pragmaNameEClass = createEClass(PRAGMA_NAME);
    createEAttribute(pragmaNameEClass, PRAGMA_NAME__IDENTIFIER);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    domainEClass.getESuperTypes().add(this.getprojectItem());
    terminatorDefinitionEClass.getESuperTypes().add(this.getdomainPrjItem());
    terminatorServiceDeclarationEClass.getESuperTypes().add(this.getterminatorItem());
    terminatorFunctionDeclarationEClass.getESuperTypes().add(this.getterminatorItem());
    deprecatedTypeEClass.getESuperTypes().add(this.gettypeReference());
    namedTypeEClass.getESuperTypes().add(this.gettypeReference());

    // Initialize classes and features; add operations and parameters
    initEClass(projectEClass, Project.class, "Project", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getProject_ProjectName(), this.getProjectName(), null, "projectName", null, 0, 1, Project.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getProject_ProjectItem(), this.getprojectItem(), null, "projectItem", null, 0, -1, Project.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getProject_PragmaList(), this.getPragmaList(), null, "pragmaList", null, 0, 1, Project.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(projectItemEClass, projectItem.class, "projectItem", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(domainEClass, Domain.class, "Domain", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDomain_DomainName(), this.getDomainName(), null, "domainName", null, 0, 1, Domain.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDomain_DomainPrjItem(), this.getdomainPrjItem(), null, "domainPrjItem", null, 0, -1, Domain.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDomain_PragmaList(), this.getPragmaList(), null, "pragmaList", null, 0, 1, Domain.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(domainPrjItemEClass, domainPrjItem.class, "domainPrjItem", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(projectNameEClass, ProjectName.class, "ProjectName", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getProjectName_Identifier(), ecorePackage.getEString(), "identifier", null, 0, 1, ProjectName.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(domainNameEClass, DomainName.class, "DomainName", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDomainName_Identifier(), ecorePackage.getEString(), "identifier", null, 0, 1, DomainName.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(terminatorNameEClass, TerminatorName.class, "TerminatorName", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTerminatorName_Identifier(), ecorePackage.getEString(), "identifier", null, 0, 1, TerminatorName.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(terminatorDefinitionEClass, TerminatorDefinition.class, "TerminatorDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTerminatorDefinition_TerminatorName(), this.getTerminatorName(), null, "terminatorName", null, 0, 1, TerminatorDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTerminatorDefinition_TerminatorItem(), this.getterminatorItem(), null, "terminatorItem", null, 0, -1, TerminatorDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTerminatorDefinition_PragmaList(), this.getPragmaList(), null, "pragmaList", null, 0, 1, TerminatorDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(terminatorItemEClass, terminatorItem.class, "terminatorItem", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getterminatorItem_ServiceVisibility(), ecorePackage.getEString(), "serviceVisibility", null, 0, 1, terminatorItem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getterminatorItem_ServiceName(), this.getServiceName(), null, "serviceName", null, 0, 1, terminatorItem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getterminatorItem_ParameterList(), this.getparameterList(), null, "parameterList", null, 0, 1, terminatorItem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getterminatorItem_PragmaList(), this.getPragmaList(), null, "pragmaList", null, 0, 1, terminatorItem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(terminatorServiceDeclarationEClass, TerminatorServiceDeclaration.class, "TerminatorServiceDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(terminatorFunctionDeclarationEClass, TerminatorFunctionDeclaration.class, "TerminatorFunctionDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getTerminatorFunctionDeclaration_ReturnType(), this.getReturnType(), null, "returnType", null, 0, 1, TerminatorFunctionDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(parameterListEClass, parameterList.class, "parameterList", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getparameterList_ParameterDefinition(), this.getParameterDefinition(), null, "parameterDefinition", null, 0, -1, parameterList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(parameterDefinitionEClass, ParameterDefinition.class, "ParameterDefinition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getParameterDefinition_ParameterName(), this.getParameterName(), null, "parameterName", null, 0, 1, ParameterDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getParameterDefinition_ParameterMode(), ecorePackage.getEString(), "parameterMode", null, 0, 1, ParameterDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getParameterDefinition_ParameterType(), this.getParameterType(), null, "parameterType", null, 0, 1, ParameterDefinition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(serviceNameEClass, ServiceName.class, "ServiceName", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getServiceName_Identifier(), ecorePackage.getEString(), "identifier", null, 0, 1, ServiceName.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(parameterNameEClass, ParameterName.class, "ParameterName", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getParameterName_Identifier(), ecorePackage.getEString(), "identifier", null, 0, 1, ParameterName.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(parameterTypeEClass, ParameterType.class, "ParameterType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getParameterType_TypeReference(), this.gettypeReference(), null, "typeReference", null, 0, 1, ParameterType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(returnTypeEClass, ReturnType.class, "ReturnType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getReturnType_TypeReference(), this.gettypeReference(), null, "typeReference", null, 0, 1, ReturnType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(typeReferenceEClass, typeReference.class, "typeReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(deprecatedTypeEClass, deprecatedType.class, "deprecatedType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getdeprecatedType_INSTANCE(), ecorePackage.getEString(), "INSTANCE", null, 0, 1, deprecatedType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getdeprecatedType_EVENT(), ecorePackage.getEString(), "EVENT", null, 0, 1, deprecatedType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getdeprecatedType_SERVICE(), ecorePackage.getEString(), "SERVICE", null, 0, 1, deprecatedType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(namedTypeEClass, NamedType.class, "NamedType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getNamedType_Anonymous(), ecorePackage.getEString(), "anonymous", null, 0, 1, NamedType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getNamedType_DomainName(), this.getDomainName(), null, "domainName", null, 0, 1, NamedType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getNamedType_TypeName(), this.getTypeName(), null, "typeName", null, 0, 1, NamedType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(typeNameEClass, TypeName.class, "TypeName", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTypeName_Identifier(), ecorePackage.getEString(), "identifier", null, 0, 1, TypeName.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(pragmaListEClass, PragmaList.class, "PragmaList", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPragmaList_Pragma(), this.getPragma(), null, "pragma", null, 0, -1, PragmaList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(pragmaEClass, Pragma.class, "Pragma", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPragma_PragmaName(), this.getPragmaName(), null, "pragmaName", null, 0, 1, Pragma.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPragma_PragmaValue(), ecorePackage.getEString(), "pragmaValue", null, 0, -1, Pragma.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(pragmaNameEClass, PragmaName.class, "PragmaName", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPragmaName_Identifier(), ecorePackage.getEString(), "identifier", null, 0, 1, PragmaName.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //MaslPackageImpl
