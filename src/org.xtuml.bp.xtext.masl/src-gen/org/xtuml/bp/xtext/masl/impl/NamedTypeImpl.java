/**
 * generated by Xtext 2.9.1
 */
package org.xtuml.bp.xtext.masl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtuml.bp.xtext.masl.DomainName;
import org.xtuml.bp.xtext.masl.MaslPackage;
import org.xtuml.bp.xtext.masl.NamedType;
import org.xtuml.bp.xtext.masl.TypeName;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Named Type</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtuml.bp.xtext.masl.impl.NamedTypeImpl#getAnonymous <em>Anonymous</em>}</li>
 *   <li>{@link org.xtuml.bp.xtext.masl.impl.NamedTypeImpl#getDomainName <em>Domain Name</em>}</li>
 *   <li>{@link org.xtuml.bp.xtext.masl.impl.NamedTypeImpl#getTypeName <em>Type Name</em>}</li>
 * </ul>
 *
 * @generated
 */
public class NamedTypeImpl extends typeReferenceImpl implements NamedType
{
  /**
   * The default value of the '{@link #getAnonymous() <em>Anonymous</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAnonymous()
   * @generated
   * @ordered
   */
  protected static final String ANONYMOUS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAnonymous() <em>Anonymous</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAnonymous()
   * @generated
   * @ordered
   */
  protected String anonymous = ANONYMOUS_EDEFAULT;

  /**
   * The cached value of the '{@link #getDomainName() <em>Domain Name</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDomainName()
   * @generated
   * @ordered
   */
  protected DomainName domainName;

  /**
   * The cached value of the '{@link #getTypeName() <em>Type Name</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTypeName()
   * @generated
   * @ordered
   */
  protected TypeName typeName;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected NamedTypeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MaslPackage.Literals.NAMED_TYPE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getAnonymous()
  {
    return anonymous;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAnonymous(String newAnonymous)
  {
    String oldAnonymous = anonymous;
    anonymous = newAnonymous;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MaslPackage.NAMED_TYPE__ANONYMOUS, oldAnonymous, anonymous));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DomainName getDomainName()
  {
    return domainName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDomainName(DomainName newDomainName, NotificationChain msgs)
  {
    DomainName oldDomainName = domainName;
    domainName = newDomainName;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MaslPackage.NAMED_TYPE__DOMAIN_NAME, oldDomainName, newDomainName);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDomainName(DomainName newDomainName)
  {
    if (newDomainName != domainName)
    {
      NotificationChain msgs = null;
      if (domainName != null)
        msgs = ((InternalEObject)domainName).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MaslPackage.NAMED_TYPE__DOMAIN_NAME, null, msgs);
      if (newDomainName != null)
        msgs = ((InternalEObject)newDomainName).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MaslPackage.NAMED_TYPE__DOMAIN_NAME, null, msgs);
      msgs = basicSetDomainName(newDomainName, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MaslPackage.NAMED_TYPE__DOMAIN_NAME, newDomainName, newDomainName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TypeName getTypeName()
  {
    return typeName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTypeName(TypeName newTypeName, NotificationChain msgs)
  {
    TypeName oldTypeName = typeName;
    typeName = newTypeName;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MaslPackage.NAMED_TYPE__TYPE_NAME, oldTypeName, newTypeName);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTypeName(TypeName newTypeName)
  {
    if (newTypeName != typeName)
    {
      NotificationChain msgs = null;
      if (typeName != null)
        msgs = ((InternalEObject)typeName).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MaslPackage.NAMED_TYPE__TYPE_NAME, null, msgs);
      if (newTypeName != null)
        msgs = ((InternalEObject)newTypeName).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MaslPackage.NAMED_TYPE__TYPE_NAME, null, msgs);
      msgs = basicSetTypeName(newTypeName, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MaslPackage.NAMED_TYPE__TYPE_NAME, newTypeName, newTypeName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MaslPackage.NAMED_TYPE__DOMAIN_NAME:
        return basicSetDomainName(null, msgs);
      case MaslPackage.NAMED_TYPE__TYPE_NAME:
        return basicSetTypeName(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MaslPackage.NAMED_TYPE__ANONYMOUS:
        return getAnonymous();
      case MaslPackage.NAMED_TYPE__DOMAIN_NAME:
        return getDomainName();
      case MaslPackage.NAMED_TYPE__TYPE_NAME:
        return getTypeName();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MaslPackage.NAMED_TYPE__ANONYMOUS:
        setAnonymous((String)newValue);
        return;
      case MaslPackage.NAMED_TYPE__DOMAIN_NAME:
        setDomainName((DomainName)newValue);
        return;
      case MaslPackage.NAMED_TYPE__TYPE_NAME:
        setTypeName((TypeName)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MaslPackage.NAMED_TYPE__ANONYMOUS:
        setAnonymous(ANONYMOUS_EDEFAULT);
        return;
      case MaslPackage.NAMED_TYPE__DOMAIN_NAME:
        setDomainName((DomainName)null);
        return;
      case MaslPackage.NAMED_TYPE__TYPE_NAME:
        setTypeName((TypeName)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MaslPackage.NAMED_TYPE__ANONYMOUS:
        return ANONYMOUS_EDEFAULT == null ? anonymous != null : !ANONYMOUS_EDEFAULT.equals(anonymous);
      case MaslPackage.NAMED_TYPE__DOMAIN_NAME:
        return domainName != null;
      case MaslPackage.NAMED_TYPE__TYPE_NAME:
        return typeName != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (anonymous: ");
    result.append(anonymous);
    result.append(')');
    return result.toString();
  }

} //NamedTypeImpl
