/**
 * generated by Xtext 2.9.1
 */
package org.xtuml.bp.xtext.masl.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtuml.bp.xtext.masl.MaslPackage;
import org.xtuml.bp.xtext.masl.deprecatedType;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>deprecated Type</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtuml.bp.xtext.masl.impl.deprecatedTypeImpl#getINSTANCE <em>INSTANCE</em>}</li>
 *   <li>{@link org.xtuml.bp.xtext.masl.impl.deprecatedTypeImpl#getEVENT <em>EVENT</em>}</li>
 *   <li>{@link org.xtuml.bp.xtext.masl.impl.deprecatedTypeImpl#getSERVICE <em>SERVICE</em>}</li>
 * </ul>
 *
 * @generated
 */
public class deprecatedTypeImpl extends typeReferenceImpl implements deprecatedType
{
  /**
   * The default value of the '{@link #getINSTANCE() <em>INSTANCE</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getINSTANCE()
   * @generated
   * @ordered
   */
  protected static final String INSTANCE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getINSTANCE() <em>INSTANCE</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getINSTANCE()
   * @generated
   * @ordered
   */
  protected String instance = INSTANCE_EDEFAULT;

  /**
   * The default value of the '{@link #getEVENT() <em>EVENT</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEVENT()
   * @generated
   * @ordered
   */
  protected static final String EVENT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getEVENT() <em>EVENT</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEVENT()
   * @generated
   * @ordered
   */
  protected String event = EVENT_EDEFAULT;

  /**
   * The default value of the '{@link #getSERVICE() <em>SERVICE</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSERVICE()
   * @generated
   * @ordered
   */
  protected static final String SERVICE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSERVICE() <em>SERVICE</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSERVICE()
   * @generated
   * @ordered
   */
  protected String service = SERVICE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected deprecatedTypeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MaslPackage.Literals.DEPRECATED_TYPE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getINSTANCE()
  {
    return instance;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setINSTANCE(String newINSTANCE)
  {
    String oldINSTANCE = instance;
    instance = newINSTANCE;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MaslPackage.DEPRECATED_TYPE__INSTANCE, oldINSTANCE, instance));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getEVENT()
  {
    return event;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEVENT(String newEVENT)
  {
    String oldEVENT = event;
    event = newEVENT;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MaslPackage.DEPRECATED_TYPE__EVENT, oldEVENT, event));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getSERVICE()
  {
    return service;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSERVICE(String newSERVICE)
  {
    String oldSERVICE = service;
    service = newSERVICE;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MaslPackage.DEPRECATED_TYPE__SERVICE, oldSERVICE, service));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MaslPackage.DEPRECATED_TYPE__INSTANCE:
        return getINSTANCE();
      case MaslPackage.DEPRECATED_TYPE__EVENT:
        return getEVENT();
      case MaslPackage.DEPRECATED_TYPE__SERVICE:
        return getSERVICE();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MaslPackage.DEPRECATED_TYPE__INSTANCE:
        setINSTANCE((String)newValue);
        return;
      case MaslPackage.DEPRECATED_TYPE__EVENT:
        setEVENT((String)newValue);
        return;
      case MaslPackage.DEPRECATED_TYPE__SERVICE:
        setSERVICE((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MaslPackage.DEPRECATED_TYPE__INSTANCE:
        setINSTANCE(INSTANCE_EDEFAULT);
        return;
      case MaslPackage.DEPRECATED_TYPE__EVENT:
        setEVENT(EVENT_EDEFAULT);
        return;
      case MaslPackage.DEPRECATED_TYPE__SERVICE:
        setSERVICE(SERVICE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MaslPackage.DEPRECATED_TYPE__INSTANCE:
        return INSTANCE_EDEFAULT == null ? instance != null : !INSTANCE_EDEFAULT.equals(instance);
      case MaslPackage.DEPRECATED_TYPE__EVENT:
        return EVENT_EDEFAULT == null ? event != null : !EVENT_EDEFAULT.equals(event);
      case MaslPackage.DEPRECATED_TYPE__SERVICE:
        return SERVICE_EDEFAULT == null ? service != null : !SERVICE_EDEFAULT.equals(service);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (INSTANCE: ");
    result.append(instance);
    result.append(", EVENT: ");
    result.append(event);
    result.append(", SERVICE: ");
    result.append(service);
    result.append(')');
    return result.toString();
  }

} //deprecatedTypeImpl
