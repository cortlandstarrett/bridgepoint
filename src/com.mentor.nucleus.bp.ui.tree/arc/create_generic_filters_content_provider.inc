.//=====================================================================
.//
.// File:      $RCSfile$
.// Version:   $Revision$
.// Modified:  $Date$
.//
.// (c) Copyright 2006-2013 by Mentor Graphics Corp.  All rights reserved.
.//
.//=======================================================================
.// This document contains information proprietary and confidential to
.// Mentor Graphics Corp., and is not for external distribution.
.//=======================================================================
.//
.// This file is responsible for generating the class that provides the
.// filter dialog for the given project with a list of things that can be 
.// filtered.
.//
.function create_generic_filters_content_provider
  .param string path
  .param string prefix
  .param string package
  .param string plugin_name
  .//
  .assign provider_name = "${prefix}FiltersContentProvider"
  .assign attr_result = provider_name  
package ${package};
//========================================================================
//
// File: ${path}/${provider_name}.java
//
// WARNING:      Do not edit this generated file
// Generated by: ${info.arch_file_name}
// Version:      **Revision**
//
// (c) Copyright 2006-2013 by Mentor Graphics Corp.  All rights reserved.
//
//========================================================================
//This document contains information proprietary and confidential to
//Mentor Graphics Corp., and is not for external distribution.
//======================================================================== 
//
// This class provides the ${prefix} Explorer filter dialog with a list of
// things that can be filtered.
//
import java.util.ArrayList;
import java.util.List;

import org.eclipse.jface.dialogs.IDialogSettings;
import org.eclipse.jface.viewers.IStructuredContentProvider;
import org.eclipse.jface.viewers.Viewer;

/**
 * The FiltersContentProvider provides the elements for use by the list dialog
 * for selecting the patterns to apply.
 */
public class ${provider_name} implements IStructuredContentProvider {
  private static List definedFilters;
  /**
   * Create a ${provider_name} using the selections from the supplied
   * resource filter.
   */
  public ${provider_name}() {
  }
  /* (non-Javadoc)
   * Method declared on IContentProvider.
   */
  public void dispose() {}
  /**
   * Returns the filters currently defined for the navigator.
   *
   * @return a list of strings
   */
  public static List getDefinedFilters() {
    if (definedFilters == null) {
      readFilters();
    }
    return definedFilters;
  }
  /* (non-Javadoc)
   * Method declared on IStructuredContentProvider.
   */
  public Object[] getElements(Object inputElement) {
    return getDefinedFilters().toArray();
  }
  /**
   * Return the initially selected elements.
   */
  public String[] getInitialSelections() {
    IDialogSettings settings = ${plugin_name}.getDefault().getDialogSettings();
    ArrayList selections = new ArrayList();
    if (settings != null) {   
      IDialogSettings filterSect = settings.getSection("com.mentor.nucleus.bp.ui.filterSettings"); // $$NON-NLS-1$$
      if (filterSect != null) {
        for (int i=0; i<getDefinedFilters().size(); i++){
          String filter = filterSect.get((String)getDefinedFilters().get(i));
          if (filter != null) {
            if (filter.equals("true")) {  // $$NON-NLS-1$$
              selections.add(getDefinedFilters().get(i));
            }
          }
        }
      }
    }
    String [] result = new String[selections.size()];
    for (int i=0; i<selections.size(); i++) {
      result[i] = (String)selections.get(i);
    }
    return result;
  }
  /**
   * Set the selected elements
   */
  public void setSelections(String [] elements){
    ArrayList selections = new ArrayList();
    for (int i=0; i < elements.length; i++){
      selections.add(elements[i]);
    }
    IDialogSettings settings = ${plugin_name}.getDefault().getDialogSettings();
    if (settings != null) {
      IDialogSettings filterSect = settings.getSection("com.mentor.nucleus.bp.ui.filterSettings"); // $$NON-NLS-1$$
      if (filterSect == null) {
        filterSect = settings.addNewSection("com.mentor.nucleus.bp.ui.filterSettings"); // $$NON-NLS-1$$
      }
  .select many tree_nodes from instances of T_TNS
  .for each node in tree_nodes
      filterSect.put("${node.CategoryName}", selections.contains("${node.CategoryName}")); // $$NON-NLS-1$$ $$NON-NLS-2$$
  .end for
    }   
  }
  /* (non-Javadoc)
   * Method declared on IContentProvider.
   */
  public void inputChanged(Viewer viewer, Object oldInput, Object newInput) {
    // Input cannot change, do nothing.
  }
  /**
   * Reads the filters currently defined for the workbench. 
   */
  private static void readFilters() {
  .assign node_count = cardinality tree_nodes
    definedFilters = new ArrayList();
  .for each node in tree_nodes
    .// Put only non root node types in the list (i.e. not 'System')
    .// Filtering the root node has no effect on the tree (filtering
    .// on 'Domains' clears the tree).
    .select any parent_spec related by node->T_TPS[R1001]
    .if (not_empty parent_spec)
    definedFilters.add("${node.CategoryName}"); // $$NON-NLS-1$$
    .end if
  .end for
  }
} // FiltersContentProvider
.end function
.// $Log$
.// Revision 1.9  2013/01/10 23:19:54  rmulvey
.// job:dts0100939343
.// Updated the copyright to 2013
.//
.// Revision 1.8  2012/01/23 21:31:16  kbrown
.// job:dts0100848212
.// Batch commit of copyright updated files.
.//
.// Revision 1.7  2011/05/30 20:37:09  kbrown
.// job:dts0100742889
.// Updated copy right.
.//
.// Revision 1.6  2010/01/05 04:01:07  kbrown
.// job:dts0100644853
.// Batch commit of copyright change from 2009 to 2010 for BP CVS projects.
.//
.// Revision 1.5  2009/01/01 23:28:05  rmulvey
.// Job:4060
.// Batch promotion of copyright changes from Review-i4060 and Review-i4060-01.
.//
.// Revision 1.4.18.1  2008/12/31 15:49:16  rmulvey
.// Job:4060
.// This is a batch commit of 2009 copyright changes to branch Review-i4060.  This includes the
.// report that outlines all changes made (before/after for each line changed).  This report is found here: <cvs>/Documentation/internal/test_results/R2_1_2/i4060/update-copyright-results.txt.
.//
.// Revision 1.4  2008/01/08 20:24:35  rmulvey
.// Job:3349
.// Promoted from Review-i3349.  The copyright has been updated to 2008 and the version has been bumped to 1.5.4.
.//
.// Revision 1.3.6.1  2007/12/21 17:54:14  rmulvey
.// Job:3339
.// Checking-in the copyriight changes in branch Review-i3349.  A detailed list of these changes is found
.// in the report produced by the utility used to changesthese messages.  This report is here:
.// Documentation/internal/test_results/R1_5_4/i3349/update-copyright-results.txt
.//
.// Revision 1.3  2007/09/05 02:22:30  kbrown
.// Job:2673
.// Promoting copyright changes for plugins:
.// ui.text
.// ui.text.test
.// ui.tree
.// verifer.pkg
.// verifier.pkg-feature
.// welcome
.// welcome.test
.// help.bp.mc
.// help.bp.mc2020
.// internal.test
.//
.// Revision 1.2.24.1  2007/09/01 01:38:12  rmulvey
.// Job:2673
.// Updated copyright messages and version numbers in Review-i2673-01.
.//
.// Revision 1.2  2006/12/12 21:57:04  tlondon
.// Job: 2286
.//
.// Promotion.
.//
.// This is a batch promotion check the resource history for more information.
.// Or see the design note and implementation note named after this issue number.
.//
.// Revision 1.1.14.1  2006/12/11 19:01:36  tlondon
.// Job: 2286
.//
.// Commit changes to branch to allow others to test against in parallel with promotion.
.//
.// Revision 1.1.12.1  2006/10/21 12:49:22  campbell
.// Job:2286
.// Introduced.
.//
.// Revision 1.1.10.1  2006/07/19 14:34:52  greg
.// Job: 1850
.// Merge with HEAD 7/19/2007
.//
.// Revision 1.1.8.1  2006/07/10 15:01:57  jluebker
.// Job: 2164
.// Introduce
.//
.// Revision 1.1.6.1  2006/06/27 22:57:13  jeremyr
.// Job:2164
.// Introduce
.//
.// Revision 1.1.4.2  2006/06/12 19:03:36  jeremyr
.// Job:2164
.// Made theFilterContentProvider class public in case the view using it does not exist in the same package
.//
.// Revision 1.1.4.1  2006/06/01 20:20:37  jeremyr
.// Job:2164
.// Merged with i1625 where the original work was done.  Please refer to that Bugzilla number up to date June 1st, 2006 for more information about the files introduced and modified for this issue.
.//
.// Revision 1.1.2.2  2006/05/30 22:12:52  jeremyr
.// Job:1625
.// Refactored the plugin name and the package name to make the generated files more customizable.
.//
.// Revision 1.1.2.1  2006/05/26 23:19:21  jeremyr
.// Job:1625
.// Introduce
.//
.// Revision 1.1.4.1  2005/10/05 15:53:19  campbell
.// Job: 272
.// Introduced.
.//
.// Revision 1.1.2.1  2005/10/03 20:53:52  campbell
.// Job:272
.// Introduce arcs for the Instance Browser. These are largely copies
.// of the Model Explorer arcs of similar name, except that they build
.// an instance browser. They could easily be combined.
.//
.// Revision 1.4  2003/07/10 00:05:18  campbell
.// Job: 20
.// Fixed Implementation review observations.
.//
.// Revision 1.3  2003/07/09 23:33:53  campbell
.// Job: 20
.// Fixed Implementation review observations.
.//
.// Revision 1.2  2003/07/03 23:40:37  campbell
.// Job: 20
.// Introduced.
.//
.// Revision 1.1.2.1  2003/07/03 21:21:35  campbell
.// Job: 20
.// Introduced.
.//